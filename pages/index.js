import Head from "next/head";
import Image from "next/image";
import { useState, useEffect, useRef } from "react";
import styles from "../styles/Home.module.css";
import { v4 as uuidv4 } from "uuid";

export default function Home() {
  const [task, setTask] = useState("");
  const [todoList, setToDoList] = useState([]);
  // const [checked, setChecked] = useState(false);

  useEffect(() => {
    setToDoList(JSON.parse(localStorage.getItem("ToDoItems")) || []);
  }, []);

  const addToDo = () => {
    if (task) {
      setToDoList((prev) => {
        const newList = [
          {
            id: uuidv4(),
            name: task,
            completed: false,
          },
          ...prev,
        ];
        localStorage.setItem("ToDoItems", JSON.stringify(newList));
        return newList;
      });

      setTask("");
    }
  };

  const handleDelete = (id) => {
    // console.log(id);
    setToDoList((prev) => {
      let newJobs = prev.filter((job) => job.id !== id);
      localStorage.setItem("ToDoItems", JSON.stringify(newJobs));
      return newJobs;
    });
  };

  const handleCompleteTask = (id) => {
    let updateTodos = todoList.map((todo) => {
      if (todo.id === id) {
        todo.completed = !todo.completed;
      }
      // if (todo.completed) {
      //   setChecked(true);
      // }
      return todo;
    });
    localStorage.setItem("ToDoItems", JSON.stringify(updateTodos));

    setToDoList(updateTodos);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>ToDo List</h1>
        <div>
          <input
            type="text"
            placeholder="Task...."
            value={task}
            onChange={(e) => setTask(e.target.value)}
          />
          <button onClick={(e) => addToDo(task.id)}>Add</button>
          {todoList.map((task, index) => (
            <div
              key={task.id}
              className={`${
                task.completed ? styles["checked"] : styles["task"]
              }`}
            >
              <p
                className={styles.p}
                onClick={() => handleCompleteTask(task.id)}
              >
                {task.name}
              </p>
              <button
                className={styles.pointer}
                onClick={(e) => handleDelete(task.id)}
              >
                &#10006;
              </button>
            </div>
          ))}
          {todoList.length === 0 && <h2>No tasks</h2>}
        </div>
      </main>

      <footer></footer>
    </div>
  );
}
